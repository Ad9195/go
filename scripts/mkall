#!/bin/sh

set -e

prog=${0##*/}
usage="${prog} [-v]"

goes_dir=`go list -f '{{.Dir}}' github.com/platinasystems/go/goes`
go_dir=${goes_dir%/*}
scripts_dir=${go_dir}/scripts
dir=${0%/*}
verbose=:
v=
for arg; do
	case $arg in
	-v | -verbose | --verbose)
		verbose=echo
		v=-v
		;;
	-h | -help | --help)
		echo usage: $usage
		exit 0
		;;
	*)	echo $arg: unknown >/dev/stderr
		echo usage: $usage > /dev/stderr
		exit 1
	esac
done

eval $verbose install binary packages...
cp -a ${v} ${go_dir}/pkg $(go env GOPATH)
eval $verbose version...
go generate github.com/platinasystems/go/version
eval $verbose goes-example...
go build -o ${go_dir}/goes-example \
	github.com/platinasystems/go/goes/goes-example
eval $verbose goes-example-amd64.cpio.xz...
${scripts_dir}/mkinitrd github.com/platinasystems/go/goes/goes-example
eval $verbose goes-example-arm.cpio.xz...
env GOARCH=arm ${scripts_dir}/mkinitrd github.com/platinasystems/go/goes/goes-example
eval $verbose goes-platina-mk1...
go build -o ${go_dir}/goes-platina-mk1 \
	-tags "uio_pci_dma debug foxy" -gcflags "-N -l" \
	github.com/platinasystems/go/goes/goes-platina-mk1
eval $verbose go-wip...
go build -o ${go_dir}/go-wip \
	-tags "uio_pci_dma debug foxy" -gcflags "-N -l" \
	github.com/platinasystems/go/wip/y
eval $verbose goes-platina-mk1-bmc-arm.cpio.xz...
env GOARCH=arm ${scripts_dir}/mkinitrd \
	github.com/platinasystems/go/goes/goes-platina-mk1-bmc
