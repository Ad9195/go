// autogenerated: do not edit!
// generated from gentemplate [gentemplate -d Package=sbus -id schanEvent -d Type=schanEvent github.com/platinasystems/go/elib/elog/event.tmpl]

package sbus

import (
	"github.com/platinasystems/go/elib/elog"
)

var schanEventType = &elog.EventType{
	Name: "sbus.schanEvent",
}

func init() {
	t := schanEventType
	t.Stringer = stringer_schanEvent
	t.Encode = encode_schanEvent
	t.Decode = decode_schanEvent
	elog.RegisterType(schanEventType)
}

func stringer_schanEvent(e *elog.Event) string {
	var x schanEvent
	x.Decode(e.Data[:])
	return x.String()
}

func encode_schanEvent(b []byte, e *elog.Event) int {
	var x schanEvent
	x.Decode(e.Data[:])
	return x.Encode(b)
}

func decode_schanEvent(b []byte, e *elog.Event) int {
	var x schanEvent
	x.Decode(b)
	return x.Encode(e.Data[:])
}

func (x schanEvent) Log() { x.Logb(elog.DefaultBuffer) }

func (x schanEvent) Logb(b *elog.Buffer) {
	e := b.Add(schanEventType)
	x.Encode(e.Data[:])
}
