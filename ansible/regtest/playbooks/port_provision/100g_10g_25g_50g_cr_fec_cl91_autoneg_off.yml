---

- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version

    - debug:
        var: kernel_version.stdout_lines


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "port_provision_100g_10g_25g_50g_cr_fec_cl91_autoneg_off_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf[0]:spine[0]
  become: true
  tasks:
    - file:
        path: "{{ port_provision_log_dir }}"
        state: directory

    - name: Copy port provisioned interfaces_100g_10g_25g_50g_cr_fec_cl91_autoneg_off file to /etc/network/interfaces
      template:
        src: "../../files/{{ inventory_hostname }}/interfaces_100g_10g_25g_50g_cr_fec_cl91_autoneg_off"
        dest: "{{ network_interfaces_file }}"

    - name: Copy goesd-platina-mk1-modules.conf file
      template:
        src: "../../files/goesd-platina-mk1-modprobe.conf_100g_10g_25g_50g"
        dest: "{{ goesd_modprobe_file }}"

    - name: Restart networking service
      service:
        name: networking
        state: restarted

    - name: Restart goes
      command: "{{ item }}"
      with_items:
      - 'goes stop'
      - 'rmmod platina-mk1'
      - 'modprobe platina-mk1 provision=1,1,4,1,4,1,2,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1'
      - 'service networking restart'
      - 'goes start'

    - name: Wait few seconds for GOES to come up
      pause:
        seconds: 5

    - name: Verify media, speed and fec values
      test_multi_port_links:
        switch_name: "{{ inventory_hostname }}"
        speed: "100g,10g,25g,50g"
        media: "fiber"
        fec: "cl91"
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1


- hosts: spine[0]
  become: true
  tasks:
    - name: Initiate iperf servers
      shell: "iperf -s &"


- hosts: leaf[0]
  become: true
  tasks:
    - name: Initiate iperf client and verify traffic
      verify_iperf_traffic_multi:
        switch_name: "{{ inventory_hostname }}"
        eth_ips_last_octet: "31,32"
        speed: "100g,10g,25g,50g"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1


- include: port_provision_reset.yml
  when: reset_config


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"


- hosts: leaf:spine
  become: true
  tasks:
    - include: ../../playbooks/get_goes_status.yml

