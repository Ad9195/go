---

- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "goes_status_after_multiple_powercycle.yml{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"

- hosts: leaf:spine
  become: true
  tasks:
    - name: Take backup of /etc/frr/zebra.conf
      command: "mv {{ frr_zebra_conf_file }} {{ frr_zebra_conf_file_bck }}"

    - name: Copying config to /etc/frr/zebra.conf
      copy:
        src: "../../files/{{inventory_hostname}}/zebra.conf"
        dest: "{{ frr_zebra_conf_file }}"

    - name: Take backup of /etc/frr/bgpd.conf
      copy:
        src: "{{ frr_bgp_conf_file }}"
        dest: "{{ frr_bgp_conf_file_bck }}"
        remote_src: true
  
    - name: Add bgp config in /etc/frr/bgpd.conf
      blockinfile:
        path: "{{ frr_bgp_conf_file }}"
        marker: ""
        block: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp.conf') }}"

    - name: Restart frr
      service:
        name: frr
        state: restarted

    - name: Wait for few seconds for bgp to establish connection
      pause:
        seconds: 35

    - include_tasks: powercycle_multiple_test.yml
      with_sequence: count=10

    - file:
        path: "{{ system_restartability_log_dir }}"
        state: directory

    - command: "date +%Y%m%d%T"
      register: end_time
      
    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - copy:
        src: "../../files/show_tech.py"
        dest: /tmp/show_tech.py
        mode: 0755
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - command: "/tmp/./show_tech.py --path /var/log/show_tech/ --hash_name {{ hostvars['server_emulator']['hash_name'] }}"
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - file:
        path: /tmp/show_tech.py
        state: absent
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

- include: goes_status_after_multiple_powercycle_reset.yml
  when:
    - reset_config
    - not dry_run
      
      
- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - debug:
        msg: "Test case result: {{ result.result_status }}"
      when: not dry_run

    - debug:
        msg: "Failure summary: {{ result.result_detail }}"
      when: not dry_run

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"
      when: not dry_run
